#import "@preview/modern-g7-32:0.1.0": gost, abstract, title-templates, structure-heading

#show: gost.with(
  title-template: title-templates.mai-university-lab,
  performers: (
    (name: "Елисеев П.А.", position: "Студент М3О-221Б-23"),
  ),
  institute: (number: 3, name: "Системы управления, информатика и электроэнергетика"),
  department: (number: 304, name: "Вычислительные машины, системы и сети"),
  report-type: "Архитектура ЭВМ",
  about: ["Организация операционной части\ центрального процессора"],
  bare-subject: true,
  subject: "",
  research: "Вариант №7",
  manager: (name: "Давыдкина Е.А.", position: "Старший преподаватель, инженер кафедры 304"),
  city: "Москва",
) 

#structure-heading[Цели и задачи]
Составить микропрограмму функционирования центрального процессора
при выполнении 2-х адресной команды. Использовать способы адресации
согласно заданию (таблица @task).

#figure(
  table(
    columns: 3,
    inset: (x: 20pt, y: 8pt),
    table.header(
      [*1 операнд*], [*2 операнд*], [*Результат*]
    ),
    [Прямая], [Косвенно-регистровая], [1ый операнд]
  ),
  caption: [Способы адресации операндов и запись результата]
) <task>

Начертить структурную схему операционной части центрального процессора.

#structure-heading[Структурная схема]

#figure(image("circuit.svg"), caption: [Структурная схема операционной части ЦП]) <operational>

Рассмотрим схему, представленную на рисунке @operational:

- *РАП* - Регистр Адреса Памяти

- *РЧП* - Регистр Чтения/записи Памяти

- *СчК* - Счетчик Команд

- *РОНы* - Регистры Общего Назначения

- *РК* - Регистр Команды

- *R1*, *R2* - Поля адресов регистров / операндов в команде

- *РАРП* – Регистр Адреса Регистровой Памяти

- *РЧРП* – Регистр Числа Регистровой Памяти

- *P1*, *P2* - Регистры операндов АЛУ

- *АЛУ* - Арифметико-логическое устройство

- *PC* - Регистр результата АЛУ

#structure-heading[Микропрограмма]

*1 этап - выбор команды из памяти:*
```go
РАП:=СчК      // Адрес след. команды из СчК подается на РАП.
РЧП:=Чт(РАП)   // Чтение команды из РАП на РЧП.
РК:=РЧП       // Команда из РЧП подаётся на РК.
СчК:=СчК + n  // Увеличение адреса СчК на длину команды.
```
*2 этап - дешифрация кода операции:*

Код операции (КОП) из регистра команд (РК) поступает в блок устройства управления (БУУ). БУУ дешифрирует КОП и генерирует управляющие сигналы для выполнения команды на следующих этапах.

*3 этап - формирование ИА и выбор операндов:*

Первый операнд (прямая адресация):
```go
РАП:=РК(R1)   // Адрес 1-го операнда из РК(R1) подается на РАП.
РЧП:=Чт(РАП)   // Чтение 1-го операнда из РАП на РЧП.
Р1:=РЧП       // 1-й операнд из РЧП подаётся на входной регистр АЛУ.
```
Второй операнд (косвенно-регистровая адресация):
```go
РАРП:=РК(R2)  // Адрес регистра из РК(R2) подается на РАРП.
РЧРП:=Чт(РАРП) // Чтение адреса 2-го операнда из РОН на РЧРП.
РАП:=РЧРП     // Адрес 2-го операнда из РЧРП подается на РАП.
РЧП:=Чт(РАП)   // Чтение 2-го операнда из РАП на РЧП.
Р2:=РЧП       // 2-й операнд из РЧП подаётся на входной регистр АЛУ.
```

*4 этап - выполнение операции в АЛУ:*
```go
РС:=Р1 <операция> Р2 // Выполнение в АЛУ операции над P1 и P2, результат записывается в РС.
```
*5 этап - запись результатов:*
```go
РАП:=РК(R1)   // Целевой адрес результата из РК(R1) подается на РАП.
РЧП:=РС       // Результат из РС подаётся на РЧП.
Зп(РАП):=РЧП  // Запись результата из РЧП в РАП.
```