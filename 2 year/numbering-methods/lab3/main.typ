#import "@preview/modern-g7-32:0.1.0": gost, abstract, title-templates, structure-heading
#import "@preview/tablex:0.0.8": tablex, hlinex, vlinex
#import "@preview/codly:1.3.0": *
#import "@preview/codly-languages:0.1.1": *
#show: codly-init.with()
#show raw: set text(size: 8pt)

#let lab-num = 3

#codly(zebra-fill: none, number-format: none, display-name: false)

#show: gost.with(
  title-template: title-templates.mai-university-lab,
  performers: (
    (name: "Елисеев П.А.", position: "Студент М3О-221Б-23"),
  ),
  institute: (number: 3, name: "Системы управления, информатика и электроэнергетика"),
  department: (number: 311, name: "Прикладные программные средства и математические методы"),
  about: [О лабораторной работе №#str(lab-num)],
  subject: ["РЕШЕНИЕ НЕЛИНЕЙНЫХ АЛГЕБРАИЧЕСКИХ УРАВНЕНИЙ"],
  city: "Москва",
  text-size: (default: 13pt, small: 10pt)
)

= Локализация корня

Для нахождения интервала, содержащего корень, преобразуем исходное уравнение $f(x) = 3 - 0.5x - exp(-0.5x^2) = 0$ к виду $g(x) = h(x)$, где:
$ g(x) = 3 - 0.5x $
$ h(x) = exp(-0.5x^2) $
Корень уравнения $f(x)=0$ является абсциссой точки пересечения графиков функций $g(x)$ и $h(x)$. Построим эти графики на выбранном интервале $[5.9, 6.1]$.

#raw(read("graph.py"), lang: "python", block: true)

```python
# Результат выполнения кода
f(5.9) = 4.9950e-02
f(6.1) = -5.0000e-02
```
#figure(
  image("images/localization.png", width: 80%),
  caption: [Графики функций $g(x)=3-0.5x$ и $h(x)=exp(-0.5x^2)$ для локализации корня на отрезке $[5.9, 6.1]$]
) <lab3_fig1>

Из графика @lab3_fig1 видно, что функции $g(x)$ и $h(x)$ пересекаются вблизи $x=6.0$.
Проверим знаки исходной функции $f(x) = g(x) - h(x)$ на концах отрезка $[5.9, 6.1]$ (см. результат выполнения кода Python выше):
$f(5.9) approx 0.04995 > 0$
$f(6.1) approx -0.05000 < 0$
Так как функция $f(x)$ непрерывна и меняет знак на отрезке $[5.9, 6.1]$, корень уравнения $f(x)=0$ находится на этом отрезке.

= Метод простой итерации (МПИ)

Преобразуем уравнение $f(x)=0$ к виду $x = phi(x)$.
$ 3 - 0.5x - exp(-0.5x^2) = 0 $
$ 0.5x = 3 - exp(-0.5x^2) $
$ x = 6 - 2 exp(-0.5x^2) $
Таким образом, $ phi(x) = 6 - 2 exp(-0.5x^2) $.

Проверим условие сходимости $ abs(phi'(x)) < 1 $ на отрезке $[5.9, 6.1]$.
$ phi'(x) = -2 exp(-0.5x^2) * (-x) = 2x exp(-0.5x^2) $
Найдем производную $phi''(x)$ для исследования монотонности $phi'(x)$:
$ phi''(x) = 2 exp(-0.5x^2) + 2x exp(-0.5x^2) * (-x) = 2 exp(-0.5x^2) (1 - x^2) $
На отрезке $[5.9, 6.1]$, $1-x^2 < 0$, следовательно $phi''(x) < 0$. Это означает, что $phi'(x)$ монотонно убывает на данном отрезке.
Значит, максимальное значение модуля производной будет на левом конце отрезка, а минимальное - на правом.
$ phi'(5.9) = 2 * 5.9 * exp(-0.5 * 5.9^2) = 11.8 * exp(-17.405) approx 3.25326 * 10^(-7) $
$ phi'(6.1) = 2 * 6.1 * exp(-0.5 * 6.1^2) = 12.2 * exp(-18.605) approx 1.01455 * 10^(-7) $
Так как $phi'(x)$ положительна и убывает на $[5.9, 6.1]$, то $q = max_([5.9, 6.1]) abs(phi'(x)) = abs(phi'(5.9)) approx 3.253 * 10^(-7) $.
Поскольку $q < 1$, условие сходимости выполнено.

*Ручной расчет:*
Выберем начальное приближение $x_0 = 6.0$ (середина отрезка $[5.9, 6.1]$, близко к корню).
$ x_1 = phi(x_0) = 6 - 2 exp(-0.5 * 6^2) = 6 - 2 exp(-18) approx 6 - 2 * (1.52299 * 10^(-8)) $
$ x_1 approx 6 - 3.04598 * 10^(-8) approx 5.9999999695 $

#pagebreak()

*Программная реализация:*
#raw(read("simple_iteration.py"), lang: "python", block: true)
```python
# Результат выполнения кода
--- Метод Простой Итерации (МПИ) ---
k=0: x = 6.00000000
k=1: x = 5.99999997, |x_k - x_(k-1)| = 3.05e-08
k=2: x = 5.99999997, |x_k - x_(k-1)| = 0.00e+00

Корень (МПИ): 5.999999970
Число итераций: 2
```
Метод простой итерации очень быстро сошелся к значению $ x approx 5.999999970 $ за 2 итерации.

= Метод Ньютона

Итерационная формула метода Ньютона: $ x_(n+1) = x_n - f(x_n) / f'(x_n) $
$ f(x) = 3 - 0.5x - exp(-0.5x^2) $
$ f'(x) = -0.5 + x exp(-0.5x^2) $
$ f''(x) = 2 exp(-0.5x^2) (1 - x^2) $

Проверим условия сходимости на отрезке $[5.9, 6.1]$:
1. $f(5.9) * f(6.1) < 0$ (выполнено, так как $f(5.9) > 0$ и $f(6.1) < 0$).
2. $f'(x)$:
   $f'(5.9) = -0.5 + 5.9 * exp(-0.5 * 5.9^2) approx -0.499999837 $
   $f'(6.1) = -0.5 + 6.1 * exp(-0.5 * 6.1^2) approx -0.499999949 $
   Производная $f'(x)$ близка к $-0.5$ и отрицательна на всем отрезке $[5.9, 6.1]$. Ее знак сохраняется.
3. $f''(x)$:
   На отрезке $[5.9, 6.1]$, множитель $(1-x^2)$ отрицателен ($1 - 5.9^2 = 1 - 34.81 = -33.81$; $1 - 6.1^2 = 1 - 37.21 = -36.21$). Множитель $2exp(-0.5x^2)$ всегда положителен. Следовательно, $f''(x) < 0$ на всем отрезке $[5.9, 6.1]$. Знак $f''(x)$ сохраняется.

Условия для сходимости метода Ньютона выполнены. Выберем начальное приближение $x_0$ так, чтобы $ f(x_0) * f''(x_0) > 0 $ 
Выберем $x_0 = 6.0$ как и ранее, так как $f(6.0)$ ближе к нулю.

*Ручной расчет:*
$ x_0 = 6.0 $
$ f(x_0) = f(6) = -exp(-18) approx -1.52299 * 10^(-8) $
$ f'(x_0) = f'(6) = -0.5 + 6 exp(-18) approx -0.4999999086 $
$ x_1 = x_0 - f(x_0) / f'(x_0) approx 6.0 - (-1.52299 * 10^(-8)) / (-0.4999999086) $
$ x_1 approx 6.0 - (1.52299 * 10^(-8)) / (0.4999999086) approx 6.0 - 3.04598023 * 10^(-8) approx 5.9999999695 $

#pagebreak()

*Программная реализация:*
#raw(read("newton.py"), lang: "python", block: true)
```python
# Результат выполнения кода
--- Метод Ньютона ---
k=0: x = 6.00000000
k=1: x = 5.99999997, |x_k - x_(k-1)| = 3.05e-08, f(x) = 0.00e+00
k=2: x = 5.99999997, |x_k - x_(k-1)| = 0.00e+00, f(x) = 0.00e+00

Корень (Ньютон): 5.999999970
Число итераций: 2
```
Метод Ньютона также сошелся к значению $x approx 5.999999970$ за 2 итерации.

#structure-heading[Вывод]

В ходе лабораторной работы №3 был локализован корень нелинейного уравнения $ 3 - 0.5 x - exp(-0.5 x^2) = 0 $ на отрезке $[5.9, 6.1]$.
Для нахождения корня с точностью $ epsilon = 10^(-6) $ были применены два метода:
1.  *Метод простой итерации:* Использовалась итерационная функция $ phi(x) = 6 - 2 exp(-0.5x^2) $. Метод сошелся за 2 итерации к значению $ x approx 5.999999970 $ с начальным приближением $x_0 = 6.0$.
2.  *Метод Ньютона:* Использовалась итерационная формула $ x_(n+1) = x_n - f(x_n) / f'(x_n) $. Метод также сошелся за 2 итерации к значению $ x approx 5.999999970 $ с начальным приближением $x_0 = 6.0$.

Оба метода показали быструю сходимость для данного уравнения и начального приближения, достигнув требуемой точности всего за 2 итерации. Результаты, полученные обоими методами, совпадают. Корень уравнения $ f(x) = 0 $ с точностью $10^(-6)$ равен $ x approx 5.999999970 $.
